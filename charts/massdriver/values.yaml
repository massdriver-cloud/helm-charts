# BEGIN Mandatory values
# You must set these values before deploying the chart.
postgres:
  username: 
  password: 
  hostname: 
  port: 5432

smtp:
  username: 
  password: 
  hostname: 
  port: 587
  from: 

domain: 

dockerhub:
  username: massdrivercloud
  accessToken:

licenseKey:
# END Mandatory values

# This creates a temporary user for quick access before OIDC is setup
quickstart:
  email: 
  password: 

nameOverride: ""
fullnameOverride: ""

# Massdriver Variables
massdriver:
  logLevel: info

  podAnnotations: {}

  podLabels: {}

  replicaCount: 2

  image:
    repository: massdrivercloud/massdriver
    tag: "1.0.6"

  port: 4000

  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi
  
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: 
    failureThreshold: 3
    httpGet:
      path: /_health
      port: http
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 2
    timeoutSeconds: 1

  podSecurityContext: {}
    # fsGroup: 10001

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 10001
    
  nodeSelector: {}

  tolerations: []

  affinity: {}

  serviceAccount:
    create: true
    automount: true
    annotations: {}
  
  service:
    port: 80

  ingress:
    enabled: true
    ingressClassName: ""
    annotations: {}
      # cert-manager.io/cluster-issuer: letsencrypt-prod
      # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      # nginx.ingress.kubernetes.io/proxy-body-size: 20m
    tls:
      # Set this to false to run Massdriver without TLS (only HTTP). This is NOT recommended for production.
      enabled: true
      # if secretName is unspecified the default secret name will be <release-name>-massdriver-tls
      secretName:
      # if you want helm to create the secret for you, set this to true and uncomment and provide the cert and key values below
      createSecret: true
      # cert: |-
      #   -----BEGIN CERTIFICATE-----
      #   ...
      #   -----END CERTIFICATE-----
      # key: |-
      #   -----BEGIN RSA PRIVATE KEY-----
      #   ...
      #   -----END RSA PRIVATE KEY-----

  epmd:
    port: 4369

  migration:
    enabled: true


# Launch Control Variables
launchControl:

  podAnnotations: {}

  podLabels: {}

  replicaCount: 2

  image:
    repository: massdrivercloud/launch-control
    pullPolicy: IfNotPresent
    tag: "1.0.1"

  port: 8080

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: 
    failureThreshold: 3
    httpGet:
      path: /healthz
      port: http
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 2
    timeoutSeconds: 1

  podSecurityContext:
    fsGroup: 10001

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    
  nodeSelector: {}

  tolerations: []

  affinity: {}

  serviceAccount:
    create: true
    automount: true
    annotations: {}
  
  service:
    port: 80


# Provisioner Variables
provisioner:
  serviceAccount:
    create: true
    automount: true
    annotations: {}

ui:
  podAnnotations: {}

  podLabels: {}

  replicaCount: 2

  image:
    repository: massdrivercloud/massdriver-ui
    pullPolicy: IfNotPresent
    tag: "1.0.4"

  port: 3000

  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 400m
      memory: 512Mi
  
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: {}

  podSecurityContext: {}
    # fsGroup: 10001

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 10001
  
  service:
    port: 8080


# OIDC configuration
oidc: []
  # This is the OIDC configuration for Massdriver. Uncomment and fill in the values below to enable OIDC
  # "name" must consist of alphanumeric characters only (uppercase and lowercase letters, and numbers). No spaces, dashes, or underscores are allowed.
  # - name: 
  #   authorizeUrl:
  #   tokenUrl:
  #   clientId: 
  #   clientSecret: 


argo-workflows:
  server:
    authModes:
      - "server"
  artifactRepository:
    s3:
      bucket: argo
      # this endpoint assumes that the release name is "massdriver". This value will need to be changed if the release name is different.
      endpoint: massdriver-minio.massdriver.svc:9000
      insecure: true
      # these both assume that the release name is "massdriver" (for the secret name). This value will need to be changed if the release name is different.
      accessKeySecret:
        name: massdriver-minio
        key: rootUser
      secretKeySecret:
        name: massdriver-minio
        key: rootPassword

minio:
  # this assumes that the release name is "massdriver". This value will need to be changed if the release name is different.
  existingSecret: massdriver-minio

  replicas: 2
  resources:
    requests:
      memory: 500Mi
  
  persistence:
    size: 500Gi

  buckets:
  - name: massdriver
    policy: none
    purge: false
    versioning: false
    objectlocking: false
  - name: state
    policy: none
    purge: false
    versioning: false
    objectlocking: false
  - name: argo
    policy: none
    purge: false
    versioning: false
    objectlocking: false