{{- if .Values.kratos.migration.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "massdriver.fullname" . }}-kratos-migration
  labels:
    {{- include "massdriver.labels" . | nindent 4 }}
    app.kubernetes.io/component: kratos
spec:
  template:
    metadata:
      {{- with .Values.kratos.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "massdriver.labels" . | nindent 8 }}
        {{- with .Values.kratos.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: massdriver
    spec:
      restartPolicy: Never
      {{- with .Values.kratos.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "massdriver.fullname" . }}-massdriver
      {{- with .Values.kratos.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: postgres-init
          image: postgres:15
          command:
            - sh
            - -c
            - |
              psql -c "SELECT 1 FROM pg_database WHERE datname='kratos'" | grep -q 1 || psql -c 'CREATE DATABASE kratos'
          env:
            - name: PGHOST
              value: {{ .Values.postgres.hostname }}
            - name: PGUSER
              value: {{ .Values.postgres.username }}
            - name: PGPASSWORD
              value: {{ .Values.postgres.password }}
            - name: PGDATABASE
              value: postgres
            - name: PGPORT
              value: {{ .Values.postgres.port | quote }}
      containers:
        - name: kratos
          command: ["kratos"]
          args:
            - "-c"
            - "/etc/config/kratos/kratos.yml"
            - "migrate"
            - "sql"
            - "-e"
            - "--yes"
          image: "{{ .Values.kratos.image.repository }}:{{ .Values.kratos.image.tag }}"
          imagePullPolicy: {{ .Values.kratos.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "massdriver.fullname" . }}-kratos-envs
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /etc/config/kratos
              name: kratos-config
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ include "massdriver.fullname" . }}-kratos
          name: kratos-config
{{- end }}