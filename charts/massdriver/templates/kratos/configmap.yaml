{{- $kratosPassword := include "massdriver.kratos.password" . }}
# this secret is used by massdriver to authenticate with kratos - it is here so that the secret generator will be consistent on install
apiVersion: v1
kind: Secret
metadata: 
  name: {{ include "massdriver.fullname" . }}-massdriver-kratos-auth
  labels:
    {{- include "massdriver.labels" . | nindent 4 }}
    app.kubernetes.io/component: massdriver
data:
  KRATOS_BASIC_AUTH_PASSWORD: {{ $kratosPassword | b64enc | quote }}
  KRATOS_BASIC_AUTH_USERNAME: {{ .Values.kratos.username | b64enc | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "massdriver.fullname" . }}-kratos
  labels:
    {{- include "massdriver.labels" . | nindent 4 }}
    app.kubernetes.io/component: kratos
data:
  account.payload.jsonnet: |-
    function(ctx)
    {
        id: ctx.identity.id,
        email: ctx.identity.traits.email,
        name: {
            first: ctx.identity.traits.name.first,
            last: ctx.identity.traits.name.last
        },
        attribution: ctx.identity.traits.attribution
    }
  identity.schema.json: |
    {
      "$id": "https://schemas.ory.sh/presets/kratos/quickstart/email-password/identity.schema.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Person",
      "type": "object",
      "properties": {
        "traits": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "title": "E-Mail",
              "minLength": 3,
              "ory.sh/kratos": {
                "credentials": {
                  "password": {
                    "identifier": true
                  }
                },
                "verification": {
                  "via": "email"
                },
                "recovery": {
                  "via": "email"
                }
              }
            },
            "name": {
              "required": [
                "first",
                "last"
              ],
              "type": "object",
              "properties": {
                "first": {
                  "title": "First Name",
                  "type": "string"
                },
                "last": {
                  "title": "Last Name",
                  "type": "string"
                }
              }
            },
            "accepted_tos": {
              "type": "boolean"
            },
            "attribution": {
              "type": "string"
            }
          },
          "required": [
            "email",
            "accepted_tos"
          ],
          "additionalProperties": false
        }
      }
    }
  kratos.yml: |
    # https://github.com/ory/kratos/blob/master/driver/config/.schema/config.schema.json
    version: v0.10.1

    config: &webhook_config
      url: https://api.{{ .Values.domain }}/webhooks/kratos/accounts
      method: POST
      body: file:///etc/config/kratos/account.payload.jsonnet
      auth:
        type: basic_auth
        config:
          user: {{ .Values.kratos.username | quote }}
          password: {{ $kratosPassword | quote }}


    serve:
      public:
        base_url: https://identity.{{ .Values.domain }}/
        cors:
          enabled: true
          allowed_origins:
            - https://www.{{ .Values.domain }}
            - https://app.{{ .Values.domain }}
            - https://*.preview.{{ .Values.domain }}
      admin:
        base_url: http://localhost:4434/

    selfservice:
      default_browser_return_url: https://app.{{ .Values.domain }}/projects
      allowed_return_urls:
        - https://www.{{ .Values.domain }}
        - https://app.{{ .Values.domain }}

      methods:
        totp:
          enabled: true
          config:
            issuer: {{ .Values.domain }}
        link:
          enabled: true
          config:
            # Defines how long a recovery link is valid for (default 1h)
            lifespan: 12h
        password:
          enabled: true
          config:
            haveibeenpwned_enabled: true

      flows:
        error:
          ui_url: https://app.{{ .Values.domain }}/error

        settings:
          ui_url: https://app.{{ .Values.domain }}/settings
          privileged_session_max_age: 15m

        recovery:
          enabled: true
          ui_url: https://app.{{ .Values.domain }}/reset_password
          lifespan: 12h

        verification:
          enabled: true
          ui_url: https://app.{{ .Values.domain }}/verification
          after:
            default_browser_return_url: https://app.{{ .Values.domain }}/projects

        logout:
          after:
            default_browser_return_url: https://app.{{ .Values.domain }}/login

        login:
          ui_url: https://app.{{ .Values.domain }}/login
          lifespan: 10m
          after:
            default_browser_return_url: https://app.{{ .Values.domain }}/projects

        registration:
          lifespan: 10m
          ui_url: https://app.{{ .Values.domain }}/register
          after:
            password:
              hooks:
                - hook: web_hook
                  config: *webhook_config
                - hook: session

    log:
      level: debug
      format: json
      leak_sensitive_values: true

    hashers:
      argon2:
        parallelism: 1
        memory: 128MB
        iterations: 2
        salt_length: 16
        key_length: 16

    identity:
      default_schema_id: default
      schemas:
        - id: default
          url: file:///etc/config/kratos/identity.schema.json

    courier:
      templates:
        verification:
          valid:
            email:
              body:
                # TODO need a new email template for this
                html: base64:
                plaintext: base64://SGksIHBsZWFzZSB2ZXJpZnkgeW91ciBhY2NvdW50IGJ5IGNsaWNraW5nIHRoZSBmb2xsb3dpbmcgbGluazoge3sgLlZlcmlmaWNhdGlvblVSTCB9fQ==
              subject: base64://VmVyaWZ5IHlvdXIgTWFzc2RyaXZlciBhY2NvdW50

    session:
      cookie:
        persistent: true
      lifespan: 240h
    cookies:
      domain: {{ .Values.domain }}